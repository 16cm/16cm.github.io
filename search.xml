<?xml version="1.0" encoding="utf-8"?>
<search>
  
    
    <entry>
      <title><![CDATA[基于Hexo博客中插入图片的Markdown语法]]></title>
      <url>%2F2017%2F03%2F24%2F%E5%9F%BA%E4%BA%8EHexo%E5%8D%9A%E5%AE%A2%E4%B8%AD%E6%8F%92%E5%85%A5%E5%9B%BE%E7%89%87%E7%9A%84Markdown%E8%AF%AD%E6%B3%95%2F</url>
      <content type="text"><![CDATA[虽然在官方语法中，Markdown插入图片的格式是这样的： ‘’’‘’’ 然而用了Hexo框架，需要在 source 文件夹中新建一个 images 文件夹，然后把图片放在 images 文件夹里。 路径必须是这样的： ‘’’‘’’ 不过有个缺点是在Markdown的编辑器里无法实时预览。]]></content>
    </entry>

    
    <entry>
      <title><![CDATA[MDK之ST-Link下载设置]]></title>
      <url>%2F2017%2F03%2F23%2FMDK%E4%B9%8BST-Link%E4%B8%8B%E8%BD%BD%E8%AE%BE%E7%BD%AE%2F</url>
      <content type="text"><![CDATA[MDK支持仿真器、串口和ST-LINK下载。 1快捷键 Alt+F7 ，然后选择 Debug ; 2点击 Settings ; 3选择 Utilities ，点击 Settings ; 设置完成后，点击下载按钮，看见 Application running… 就说明已经下载成功。]]></content>
    </entry>

    
    <entry>
      <title><![CDATA[键盘扫描，支持短按、长按、双击]]></title>
      <url>%2F2017%2F03%2F21%2F%E9%94%AE%E7%9B%98%E6%89%AB%E6%8F%8F%EF%BC%8C%E6%94%AF%E6%8C%81%E7%9F%AD%E6%8C%89%E3%80%81%E9%95%BF%E6%8C%89%E3%80%81%E5%8F%8C%E5%87%BB%2F</url>
      <content type="text"><![CDATA[基于STM32库函数编写的键盘扫描程序，根据键值触发相应的事件。 12345678910/*按键端口初始化*/void Key_Init(void)&#123; GPIO_InitTypeDef GPIO_InitStructure; /*开启按键端口（PA）的时钟*/ RCC_APB2PeriphClockCmd(RCC_APB2Periph_GPIOB,ENABLE); GPIO_InitStructure.GPIO_Pin = GPIO_Pin_8; GPIO_InitStructure.GPIO_Mode = GPIO_Mode_IPU; //上拉输入 GPIO_Init(GPIOB, &amp;GPIO_InitStructure);&#125; 1234567891011121314151617181920212223242526272829303132333435363738394041424344454647484950515253545556575859606162636465666768697071/*扫描按键*/int Key_Scan(void)&#123; int Down_Value=0; /*检测是否有按键按下*/ if(GPIO_ReadInputDataBit(GPIOA,GPIO_Pin_8) == 0 ) &#123; delay_ms(20); if(GPIO_ReadInputDataBit(GPIOA,GPIO_Pin_8) == 0 ) &#123; if(k1_shortpress_happen==0) &#123; k1_shortpress_happen = 1; key1_shortpress_Flag = 1; key1_timing=0; &#125; if(k1_shortpress_happen==1) &#123; if(key1_timing &gt; 3000) &#123; Down_Value = 2; //长按生效标志位 k1_shortpress_happen = 0; k1_LongPress_Flag=1; &#125; &#125; &#125; &#125; if(GPIO_ReadInputDataBit(GPIOA,GPIO_Pin_8)==1) &#123; key1_shortpress_Flag = 0; if(k1_shortpress_happen==1) &#123; k1_shortpress_happen = 0; if(k1_doublepress_happen==0) &#123; k1_doublepress_happen = 1; key1_doublepress_Flag=1; key1_doublepress_timing = 0; &#125; else &#123; if(key1_doublepress_timing &lt; 300) &#123; k1_doublepress_happen = 0; Down_Value = 0; //短按生效标志位 &#125; &#125; &#125; else if(k1_doublepress_happen == 1) &#123; if(key1_doublepress_timing &gt; 300) &#123; if(k1_LongPress_Flag==1) &#123; k1_LongPress_Flag=0; &#125; else &#123; Down_Value = 1; //双击生效标志位 &#125; k1_doublepress_happen = 0; key1_doublepress_Flag = 0; &#125; &#125; else if(k1_longpress_happen==1) &#123; k1_longpress_happen = 0; &#125; &#125;&#125;]]></content>
    </entry>

    
    <entry>
      <title><![CDATA[波数分辨率与波长分辨率的转换]]></title>
      <url>%2F2017%2F03%2F20%2F%E6%B3%A2%E6%95%B0%E5%88%86%E8%BE%A8%E7%8E%87%E4%B8%8E%E6%B3%A2%E9%95%BF%E5%88%86%E8%BE%A8%E7%8E%87%E7%9A%84%E8%BD%AC%E6%8D%A2%2F</url>
      <content type="text"><![CDATA[在红外光谱的研究中，经常用波数 v 来表示不同频率的红外线。 波数的定义为单位距离中波的数目，其量纲为 cm-1。 波数和波长的关系为 v ＝ 1/λ，例如波长为 1 毫米的远红外线的波数为 v ＝ 1/λ= 1/(0.1 cm-1) = 10 cm-1。 波数精度即波长重复性，指对同一样品进行多次扫描，光谱谱峰位置间的差异程度或重复性，通常用多次测量某一谱峰所得标准差来表示。 有一个简单算法，可以大概估算出分辨率：如果波数分辨率为 X (cm-1)，那么波长 λ (nm) 对应的波数为 N = 10-2/λ = 10,000,000/(λ×109) (cm-1)，对应的波长分辨率为：λ = 10,000,000×X / N2 (nm)。]]></content>
    </entry>

    
    <entry>
      <title><![CDATA[单片机程序中为什么要禁止看门狗?]]></title>
      <url>%2F2017%2F03%2F16%2F%E5%8D%95%E7%89%87%E6%9C%BA%E7%A8%8B%E5%BA%8F%E4%B8%AD%E4%B8%BA%E4%BB%80%E4%B9%88%E8%A6%81%E7%A6%81%E6%AD%A2%E7%9C%8B%E9%97%A8%E7%8B%97%2F</url>
      <content type="text"><![CDATA[单片机程序中为什么要禁止看门狗？ 设置看门狗定时器的时候，必须先关闭它才能设置，否则在开启状态下设置看门狗定时器可能会出现问题。一般单片机和DSP、还有ARM芯片里设置内部功能的时候，都是先关闭这个功能，再设置。中断也是类似的，我们通常它把中断全部关闭了，然后在程序里面进一步设置。 要搞清楚关闭看门狗定时器的深层次原因，我们先得明白其用途： 它其实就是一个定时器，这个定时器溢出是会产生一个中断响应，这个中断响应对应的中断服务就是跳回程序开头，也就是复位。启动看门狗后，要定时在程序中把看门狗的计数器清0，以防止它进入中断然后复位，这就叫做喂狗。 看门狗定时器常用在程序很容易跑飞的情况下（比如等待超时，意外进入死循环等）——在启动看门狗定时器的前提下，如果程序跑飞，不用怕，等计数器WTCNT溢出时，程序会自动复位。但在一般的程序中是不太可能会跑飞的，所以多数情况下我们关闭看门狗，是因为引入了看门狗之后就多了定时计数值处理的一些代码，这增加了程序的复杂性。]]></content>
    </entry>

    
    <entry>
      <title><![CDATA[Markdown 语法]]></title>
      <url>%2F2017%2F01%2F10%2FMarkdown%20%E8%AF%AD%E6%B3%95%2F</url>
      <content type="text"><![CDATA[一些常用的 Markdown 语法。 段落&nbsp;&nbsp;&nbsp;&nbsp;一行就是一个段落，如果要另起一行，在两个段落之间添加一个空行即可。 斜体&nbsp;&nbsp;&nbsp;&nbsp;*斜体* &nbsp;&nbsp;&nbsp;&nbsp;效果 &nbsp;&nbsp;&nbsp;&nbsp;斜体 粗体&nbsp;&nbsp;&nbsp;&nbsp;**粗体** &nbsp;&nbsp;&nbsp;&nbsp;效果 &nbsp;&nbsp;&nbsp;&nbsp;粗体 &nbsp;&nbsp;&nbsp;&nbsp;***斜体+粗体*** &nbsp;&nbsp;&nbsp;&nbsp;效果 &nbsp;&nbsp;&nbsp;&nbsp;斜体+粗体 上标&nbsp;&nbsp;&nbsp;&nbsp;n&lt;sup&gt;2&lt;/sup&gt; &nbsp;&nbsp;&nbsp;&nbsp;效果 &nbsp;&nbsp;&nbsp;&nbsp;n2 下标&nbsp;&nbsp;&nbsp;&nbsp;a=log&lt;sub&gt;2&lt;/sub&gt;b &nbsp;&nbsp;&nbsp;&nbsp;效果 &nbsp;&nbsp;&nbsp;&nbsp;a=log2b 函数&nbsp;&nbsp;&nbsp;&nbsp;&amp;fnof;(x)=x+1 &nbsp;&nbsp;&nbsp;&nbsp;效果 &nbsp;&nbsp;&nbsp;&nbsp;&fnof;(x)=x+1 根号&nbsp;&nbsp;&nbsp;&nbsp;&amp;radic;5 &nbsp;&nbsp;&nbsp;&nbsp;效果 &nbsp;&nbsp;&nbsp;&nbsp;&radic;5 角度&nbsp;&nbsp;&nbsp;&nbsp;30&amp;deg; &nbsp;&nbsp;&nbsp;&nbsp;效果 &nbsp;&nbsp;&nbsp;&nbsp;30&deg; 标题&nbsp;&nbsp;&nbsp;&nbsp;# 这是 H1 # &nbsp;&nbsp;&nbsp;&nbsp;## 这是 H2 ## &nbsp;&nbsp;&nbsp;&nbsp;### 这是 H3 ### &nbsp;&nbsp;&nbsp;&nbsp;... &nbsp;&nbsp;&nbsp;&nbsp;###### 这是 H6 ###### &nbsp;&nbsp;&nbsp;&nbsp;效果 这是 H1这是 H2这是 H3… 这是 H6引用&nbsp;&nbsp;&nbsp;&nbsp;&gt;markdown 的语法简洁，但有其局限性，所以特意保留了内联html这种方式。任何html标签及其内容，都会原样输出到结果中。也就是说，标签中的星号等作为markdown结构的符号，以及构成html标签和实体的符号，都不会做任何转义。 &nbsp;&nbsp;&nbsp;&nbsp;效果 markdown 的语法简洁，但有其局限性，所以特意保留了内联html这种方式。任何html标签及其内容，都会原样输出到结果中。也就是说，标签中的星号等作为markdown结构的符号，以及构成html标签和实体的符号，都不会做任何转义。 &nbsp;&nbsp;&nbsp;&nbsp;或 &nbsp;&nbsp;&nbsp;&nbsp;&gt;markdown 的语法简洁，但有其局限性，所以特意保留了内联html这种方式。&nbsp;&nbsp;&nbsp;&nbsp;&gt;&gt;任何html标签及其内容，都会原样输出到结果中。也就是说，标签中的星号等作为markdown结构的符号，以及构成html标签和实体的符号，都不会做任何转义。 &nbsp;&nbsp;&nbsp;&nbsp;效果 markdown 的语法简洁，但有其局限性，所以特意保留了内联html这种方式。 任何html标签及其内容，都会原样输出到结果中。也就是说，标签中的星号等作为markdown结构的符号，以及构成html标签和实体的符号，都不会做任何转义。 列表无序列表&nbsp;&nbsp;&nbsp;&nbsp;* 第一条&nbsp;&nbsp;&nbsp;&nbsp;* 第二条&nbsp;&nbsp;&nbsp;&nbsp;* 第三条 &nbsp;&nbsp;&nbsp;&nbsp;效果 第一条 第二条 第三条 有序列表&nbsp;&nbsp;&nbsp;&nbsp;1. 第一条&nbsp;&nbsp;&nbsp;&nbsp;2. 第二条&nbsp;&nbsp;&nbsp;&nbsp;3. 第三条 效果 第一条 第二条 第三条 代码&nbsp;&nbsp;&nbsp;&nbsp;用反引号 ` 来标记内联代码，如果代码的内容中有反引号，请用两个反引号包裹。 &nbsp;&nbsp;&nbsp;&nbsp;代码中的 &amp;、&lt;、&gt; 符号都会自动转义，请放心使用。 代码区域&nbsp;&nbsp;&nbsp;&nbsp;反引号*3&nbsp;&nbsp;&nbsp;&nbsp;代码区域&nbsp;&nbsp;&nbsp;&nbsp;反引号*3 &nbsp;&nbsp;&nbsp;&nbsp;效果 1代码区域 分隔线&nbsp;&nbsp;&nbsp;&nbsp;*** &nbsp;&nbsp;&nbsp;&nbsp;效果 链接1[http://123.com](http://123.com) &nbsp;&nbsp;&nbsp;&nbsp;效果 &nbsp;&nbsp;&nbsp;&nbsp;http://123.com &nbsp;&nbsp;&nbsp;&nbsp;或简化 1&lt;http://123.com&gt; 图像1![123](123.jpg) &nbsp;&nbsp;&nbsp;&nbsp;这种方式需要 123.jpg 和 *.md 文件放在一起。 &nbsp;&nbsp;&nbsp;&nbsp;或 1![123](123/123.jpg) &nbsp;&nbsp;&nbsp;&nbsp;图片放在 *.md 同层级的 123 文件夹下。 转义&nbsp;&nbsp;&nbsp;&nbsp;在其他字符前加 \ 反斜线保持字符原样输出。 表格12345| 物品 | 数量 | 单价 ||:-------| ----: | :---: || iPhone | 1 | 100 || iPad | 2 | 200 || IPod | 3 | 300 | 效果 物品 数量 单价 iPhone 1 100 iPad 2 200 IPod 3 300 注意第二行的冒号表示居左居右还是居中。]]></content>
    </entry>

    
    <entry>
      <title><![CDATA[Hexo 指令]]></title>
      <url>%2F2017%2F01%2F09%2FHexo%20%E6%8C%87%E4%BB%A4%2F</url>
      <content type="text"><![CDATA[一些常用的 Hexo 指令。 新建网站1$ hexo init 生成静态文件1$ hexo generate 启动服务器1$ hexo server 默认情况下，访问网址为: http://localhost:4000/ 新建一篇文章1$ hexo new "My New Post" 清除缓存文件 db.json 和已生成的静态文件 public1$ hexo clean 部署网站1$ hexo deploy 显示草稿1$ hexo --draft 显示 source/_drafts 文件夹中的草稿文章。 显示版本1$ hexo -v 安全模式1$ hexo --safe 在安全模式下，不会载入插件和脚本。当您在安装新插件遭遇问题时，可以尝试以安全模式重新执行。 调试模式1$ hexo --debug 在终端中显示调试信息并记录到 debug.log 。]]></content>
    </entry>

    
    <entry>
      <title><![CDATA[最新最详细的Hexo博客搭建教程]]></title>
      <url>%2F2017%2F01%2F08%2F%E6%9C%80%E6%96%B0%E6%9C%80%E8%AF%A6%E7%BB%86%E7%9A%84Hexo%E5%8D%9A%E5%AE%A2%E6%90%AD%E5%BB%BA%E6%95%99%E7%A8%8B%2F</url>
      <content type="text"><![CDATA[教程参考：点我 问题问题1原教程中的 开启gh-pages功能 ，现在需要手动开启：点我 ，只要 yourname.github.io 可以正常访问就行了。 问题2执行： 1$ hexo d 出现： 123Permission denied (publickey).fatal: Could not read from remote repository.Please make sure you have the correct access rights 解决办法：12$ git config --global user.name "yourname"$ git config --global user.email "youremail" 然后生成密钥： 12345$ ssh-keygen -t rsa -C “yourname@gmail.com”按3个回车，密码为空。Your identification has been saved in /home/tekkub/.ssh/id_rsa.Your public key has been saved in /home/tekkub/.ssh/id_rsa.pub.The key fingerprint is:******** 最后得到了两个文件：id_rsa 和 id_rsa.pub ，打开 https://github.com/，在设置中添加密钥。 最后测试： 1234567$ ssh git@github.comThe authenticity of host 'github.com (207.97.227.239)' can`t be established.RSA key fingerprint is 16:27:ac:a5:76:28:2d:36:63:1b:56:4d:eb:df:a6:48.Are you sure you want to continue connecting (yes/no)? yesWarning: Permanently added 'github.com,207.97.227.239'(RSA) to the list of known hosts.ERROR: Hi tekkub! You`ve successfully authenticated, but GitHub does not provide shell accessConnection to github.com closed. 测试成功就可以 hexo d 了。 进阶推荐安装NexT主题，点我]]></content>
    </entry>

    
    <entry>
      <title><![CDATA[Hello World]]></title>
      <url>%2F2017%2F01%2F03%2Fhello-world%2F</url>
      <content type="text"><![CDATA[Welcome to Hexo! This is your very first post. Check documentation for more info. If you get any problems when using Hexo, you can find the answer in troubleshooting or you can ask me on GitHub. Quick StartCreate a new post1$ hexo new "My New Post" More info: Writing Run server1$ hexo server More info: Server Generate static files1$ hexo generate More info: Generating Deploy to remote sites1$ hexo deploy More info: Deployment]]></content>
    </entry>

    
  
  
</search>
